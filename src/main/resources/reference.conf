# Redis configuration
redis {
  ### Redis server config
  host = "localhost"
  port = 6379

  ### Optional config
  #password=
  #db=1

  ### Sentinel related config
  sentinel = false
  #sentinel-master = "mymaster"
  #sentinels = [{host :"localhost", port: 26379}]
}

# This enables akka-persistence-redis plugin
akka.persistence {
  journal.plugin = "akka-persistence-redis.journal"
  snapshot-store.plugin = "akka-persistence-redis.snapshot"
}

# Config for the plugin
akka-persistence-redis {
  journal {
    # class name of the plugin
    class = "com.hootsuite.akka.persistence.redis.journal.RedisJournal"

    # Dispatcher for fetching and replaying messages
    replay-dispatcher = "akka.persistence.dispatchers.default-replay-dispatcher"

    # namespace used for the journal key
    key-namespace = "journal"

    # Maximum number of messages to replay. Akka uses Scala.Long.MaxValue as the default.
    # max-replay-messages = 1000000
  }

  snapshot {
    # Class name of the plugin
    class = "com.hootsuite.akka.persistence.redis.snapshot.RedisSnapshotStore"

    # Dispatcher for the plugin actor.
    plugin-dispatcher = "akka.persistence.dispatchers.default-plugin-dispatcher"

    snapshot-interval = 3600 s

    # namespace used for the snapshot key
    key-namespace = "snapshot"
  }

  # Configure retries before a write request returns a NoConnectionException
  write-retries {
    # number of retries
    max = 3
    # delay between first and second retry
    delay = 1s
    # exponential factor to apply on the delay above between 2 retries
    base = 2
  }
  # Configure retries before a read request returns a NoConnectionException
  read-retries {
    # number of retries
    max = 3
    # delay between first and second retry
    delay = 1s
    # exponential factor to apply on the delay above between 2 retries
    base = 2
  }
  # Configure retries before a delete request returns a NoConnectionException
  delete-retries {
    # number of retries
    max = 3
    # delay between first and second retry
    delay = 1s
    # exponential factor to apply on the delay above between 2 retries
    base = 2
  }
}